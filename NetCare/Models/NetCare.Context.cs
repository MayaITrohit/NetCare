//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetCare.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JacEntities : DbContext
    {
        public JacEntities()
            : base("name=JacEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<actualprescriptionmed> actualprescriptionmeds { get; set; }
        public virtual DbSet<admissiondetail> admissiondetails { get; set; }
        public virtual DbSet<allergy> allergies { get; set; }
        public virtual DbSet<alluser> allusers { get; set; }
        public virtual DbSet<bnfcode> bnfcodes { get; set; }
        public virtual DbSet<clinicalnote> clinicalnotes { get; set; }
        public virtual DbSet<MedAdmin> MedAdmins { get; set; }
        public virtual DbSet<Medicine> Medicines { get; set; }
        public virtual DbSet<patientmed> patientmeds { get; set; }
        public virtual DbSet<patient> patients { get; set; }
        public virtual DbSet<Scheduler> Schedulers { get; set; }
        public virtual DbSet<specialconsideration> specialconsiderations { get; set; }
        public virtual DbSet<superuser> superusers { get; set; }
        public virtual DbSet<verified> verifieds { get; set; }
        public virtual DbSet<Ward> Wards { get; set; }
        public virtual DbSet<wardstock> wardstocks { get; set; }
        public virtual DbSet<PMB> PMBs { get; set; }
        public virtual DbSet<GuidelineManagement> GuidelineManagements { get; set; }
        public virtual DbSet<News> News { get; set; }
    
        public virtual ObjectResult<GetInpatientOrder_Result> GetInpatientOrder(string lnkpid)
        {
            var lnkpidParameter = lnkpid != null ?
                new ObjectParameter("lnkpid", lnkpid) :
                new ObjectParameter("lnkpid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInpatientOrder_Result>("GetInpatientOrder", lnkpidParameter);
        }
    
        public virtual ObjectResult<GetMedicine_Result> GetMedicine(string ward)
        {
            var wardParameter = ward != null ?
                new ObjectParameter("ward", ward) :
                new ObjectParameter("ward", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMedicine_Result>("GetMedicine", wardParameter);
        }
    
        public virtual ObjectResult<WardStockList_Result> WardStockList(string wardName)
        {
            var wardNameParameter = wardName != null ?
                new ObjectParameter("WardName", wardName) :
                new ObjectParameter("WardName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WardStockList_Result>("WardStockList", wardNameParameter);
        }
    }
}
